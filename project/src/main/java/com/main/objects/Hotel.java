package com.main.objects;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.bson.Document;
import org.bson.types.ObjectId;

public class Hotel {
    
    public static enum RoomType {STANDARD, QUEEN, KING};

    private String name = "Hotel Name";
    private String description = "";
    
    // Amount of Available rooms for each type
    private int standardRooms = 0;
    private int queenRooms = 0;
    private int kingRooms = 0;

    // Standard rooms have standard amenities, queen rooms have all standard amenities plus the queen amenities, 
    // and finally king rooms have all queen amenities plus king amenities.
    private List<Amenity> standardAmenities = null;
    private List<Amenity> queenAmenities = null;
    private List<Amenity> kingAmenities = null;

    // Pricing for each room type.
    private double roomPriceStandard = 100.00f;
    private double roomPriceQueen = 150.00f;
    private double roomPriceKing = 250.00f;

    // The additive multiplyer added to room prices for the weekends.
    private double weekendDifferential = .25f;

    private ObjectId ID; // Unique ID generated by MongoDB, this value is set when the object is retrieved from the Database.

    // The Total amount of rooms available, Useful for sorting hotels by rooms available
    public int getTotalRooms(){
        return kingRooms + queenRooms + standardRooms;
    }

    public List<Amenity> getStandardAmenities() {
        return standardAmenities;
    }

    public List<Amenity> getKingAmenities() {
        return kingAmenities;
    }

    public List<Amenity> getQueenAmenities() {
        return queenAmenities;
    }
    
    public int getKingRooms() {
        return kingRooms;
    }
    
    public int getQueenRooms() {
        return queenRooms;
    }
    
    public int getStandardRooms() {
        return standardRooms;
    }
    
    public ObjectId getID() {
        return ID;
    }
    
    public double getWeekendDifferential() {
        return weekendDifferential;
    }
    
    public double getRoomPriceKing() {
        return roomPriceKing;
    }
    
    public double getRoomPriceQueen() {
        return roomPriceQueen;
    }
    
    public double getRoomPriceStandard() {
        return roomPriceStandard;
    }
    public String getDescription() {
        return description;
    }
    
    public String getName() {
        return name;
    }
    
    public void setKingAmenities(List<Amenity> kingAmenities) {
        this.kingAmenities = kingAmenities;
    }

    public void setQueenAmenities(List<Amenity> queenAmenities) {
        this.queenAmenities = queenAmenities;
    }

    public void setKingRooms(int kingRooms) {
        this.kingRooms = kingRooms;
    }

    public void setQueenRooms(int queenRooms) {
        this.queenRooms = queenRooms;
    }

    public void setStandardRooms(int standardRooms) {
        this.standardRooms = standardRooms;
    }

    public void setID(ObjectId iD) {
        this.ID = iD;
    }

    public void setWeekendDifferential(double weekendDifferential) {
        this.weekendDifferential = weekendDifferential;
    }

    public void setRoomPriceKing(double roomPriceKing) {
        this.roomPriceKing = roomPriceKing;
    }

    public void setRoomPriceQueen(double roomPriceQueen) {
        this.roomPriceQueen = roomPriceQueen;
    }

    public void setRoomPriceStandard(double roomPriceStandard) {
        this.roomPriceStandard = roomPriceStandard;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public void setStandardAmenities(List<Amenity> amenities) {
        this.standardAmenities = amenities;
    }

    // Convert this Hotel into a Document to be stored in the Database
    public Document ToDocument(){

        Document document = new Document();

        document.append("Name", this.name);
        document.append("Description", this.description);

        document.append("Standard Rooms", this.standardRooms);
        document.append("Queen Rooms", this.queenRooms);
        document.append("King Rooms", this.kingRooms);

        List<Document> saDoc = new ArrayList<>();
        List<Document> qDoc = new ArrayList<>();
        List<Document> kDoc = new ArrayList<>();

        if(standardAmenities != null)
            for(Amenity amenity : standardAmenities)
                saDoc.add(amenity.ToDocument());

        if(queenAmenities != null)
            for(Amenity amenity : queenAmenities)
                qDoc.add(amenity.ToDocument());

        if(kingAmenities != null)
            for(Amenity amenity : kingAmenities)
                kDoc.add(amenity.ToDocument());

        document.append("Standard Amenities", saDoc);
        document.append("Queen Amenities", qDoc);
        document.append("King Amenities", kDoc);

        document.append("RoomPriceStandard", this.roomPriceStandard);
        document.append("RoomPriceQueen", this.roomPriceQueen);
        document.append("RoomPriceKing", this.roomPriceKing);

        document.append("WeekendDifferential", this.weekendDifferential);

        return document;

    }

    // Convert given Document into a Hotel Object.
    public static Hotel ToHotel(Document document){

        Hotel hotel = new Hotel();

        hotel.standardAmenities = new ArrayList<>();
        hotel.queenAmenities = new ArrayList<>();
        hotel.kingAmenities = new ArrayList<>();

        hotel.name = (String) document.get("Name");
        hotel.description = (String) document.get("Description");

        hotel.standardRooms = (int) document.get("Standard Rooms");
        hotel.queenRooms = (int) document.get("Queen Rooms");
        hotel.kingRooms = (int) document.get("King Rooms");

        ArrayList<Document> standardArrayList = (ArrayList<Document>) document.get("Standard Amenities");
        ArrayList<Document> queenArrayList = (ArrayList<Document>) document.get("Queen Amenities");
        ArrayList<Document> kingArrayList = (ArrayList<Document>) document.get("King Amenities");

        for(Document amenity : standardArrayList)
            hotel.standardAmenities.add(Amenity.FromDocument(amenity));
        for(Document amenity : queenArrayList)
            hotel.queenAmenities.add(Amenity.FromDocument(amenity));
        for(Document amenity : kingArrayList)
            hotel.kingAmenities.add(Amenity.FromDocument(amenity));

        hotel.roomPriceStandard = (double) document.get("RoomPriceStandard");
        hotel.roomPriceQueen = (double) document.get("RoomPriceQueen");
        hotel.roomPriceKing = (double) document.get("RoomPriceKing");

        hotel.weekendDifferential = (double) document.get("WeekendDifferential");

        hotel.ID = (ObjectId) document.get("_id");

        return hotel;

    }

    public String toString(){
        String returnString = "Name: " + name + 
                "\nID: " + ID.toString() +
                "\nDescription: " + description +
                "\nStandard Rooms: " + standardRooms +
                "\nQueen Rooms: " + queenRooms +
                "\nKing Rooms: " + kingRooms +
                "\nTotal Rooms: " + getTotalRooms() +
                "\nRoom Price Standard: " + roomPriceStandard +
                "\nRoom Price Queen: " + roomPriceQueen +
                "\nRoom Price King: " + roomPriceKing +
                "\nWeekend Differential: " + weekendDifferential +
                "\nStandard Amenities: ";

        for(Amenity amenity : standardAmenities)
            returnString += "\n\tName: " + amenity.getName() + "\n\tDescription: " + amenity.getDescription();
        
        for(Amenity amenity : queenAmenities)
            returnString += "\n\tName: " + amenity.getName() + "\n\tDescription: " + amenity.getDescription();
        
        for(Amenity amenity : kingAmenities)
            returnString += "\n\tName: " + amenity.getName() + "\n\tDescription: " + amenity.getDescription();

        return returnString;
    }
}
