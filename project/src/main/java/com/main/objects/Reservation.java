package com.main.objects;

import java.util.Date;

import org.bson.Document;
import org.bson.types.ObjectId;

public class Reservation {
    
    // The account that made the Reservation
    private Account reservee = null;

    // Start and End of Reservation
    private Date startDate = null;
    private Date endDate = null;

    // The Hotel and Room that has been reserved
    private Hotel hotel = null;
    //private Room room = null; Unnecessary?
    
    private ObjectId ID; // Unique ID generated by MongoDB, this value is set when the object is retrieved from the Database.

/// ----------------------------------------------------
    public Account getReservee() {
        return reservee;
    }
    public ObjectId getID() {
        return ID;
    }
    public void setID(ObjectId iD) {
        this.ID = iD;
    }
    /*
    public Room getRoom() {
        return room;
    }
    public void setRoom(Room room) {
        this.room = room;
    }
    */
    public Hotel getHotel() {
        return hotel;
    }
    public void setHotel(Hotel hotel) {
        this.hotel = hotel;
    }
    public Date getEndDate() {
        return endDate;
    }
    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }
    public Date getStartDate() {
        return startDate;
    }
    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }
    public void setReservee(Account reservee) {
        this.reservee = reservee;
    }
/// --------------------------------------------------------

    // Test to see if a given date is within a current reservation span. Useful for listing reservations on a certain day or within a date range.
    public boolean isWithinRange(Date testDate) {
        return !(testDate.before(startDate) || testDate.after(endDate));
    }
    
    public Document ToDocument() {
        Document document = new Document();

        document.append("Reservee", reservee);
        document.append("Start Date", startDate);
        document.append("End Date", endDate);
        document.append("Hotel", hotel);

        return null;
    }

    public static Reservation ToReservation(Document document){
        Reservation reservation = new Reservation();

        reservation.reservee = (Account) document.get("Reservee");

        reservation.startDate = (Date) document.get("Start Date");
        reservation.endDate = (Date) document.get("End Date");

        reservation.hotel = (Hotel) document.get("Hotel");

        reservation.ID = (ObjectId) document.get("_id");

        return reservation;
    }
}
